///////////////////////////////////////////////////////////////////////////
// Get state-space from linearized function in P(L1,L2)  with u = V
///////////////////////////////////////////////////////////////////////////
Ao1 = 3.1669*    0.00001;
Ao2 = 1.78139*   0.00001;
At1 = 1.55179*   0.001;
At2 = 1.55179*   0.001;
g = 9.8
kp = 3.3*        0.000001; 
k1 = kp/At1;
k2 = Ao1*sqrt(2*g)/At1;
k3 = Ao1*sqrt(2*g)/At2;
k4 = Ao2*sqrt(2*g)/At2;
V = 5;
A = [-(k2^2)/(2*k1*V), 0 ; (k2*k3)/(2*k1*V), -(k4*k4*k2)/(2*k1*k3*V)];
B = [k1; 0];
C = [1 ,0; 0 ,1];
D = [0];
jsys = syslin("c",A,B,C);
//////////////////////////////////////////////////////////////////////////
// LQR based on linearized system
//////////////////////////////////////////////////////////////////////////
P = jsys;
R = 0.5
Q = diag([15 35]);
S = zeros(size(R,1),size(Q,2))
[Kc] = lqr(P,Q,R);
//// FREQUENCY REPONSE /////////////////////////////////////////////////////////
// Open Loop Transfer function /////////////////////////////////////////////////
Ak = A - [Kc(1),Kc(2); 0,0]
olsys = syslin("c",Ak,B,C);
oltf = ss2tf(olsys);
clf(); bode(oltf, 0.01, 100);
hl=legend(['L1';'L2']);
// Close loop transfer function ///////////////////////////////////////////////
cltf = oltf/.[1,1];
clf(); bode(cltf, 0.01, 100);
hl=legend(['L1';'L2']);
